apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: fluxai-
spec:
  serviceAccountName: batch-job-sa
  nodeSelector:
    kubernetes.io/hostname: ""  # Node will be dynamically set by FluxEdge
  entrypoint: main
  arguments:
    parameters:
      - name: repoUrl
        value: "https://github.com/Kyuubi2709/NIMs.git"  # Repo URL
      - name: repoBranch
        value: "main"  # Branch to deploy
      - name: cpuLimit
        value: "2"  # CPU limit (in cores)
      - name: memoryLimit
        value: "4Gi"  # Memory limit
      - name: storageLimit
        value: "10Gi"  # Storage limit
      - name: gpuLimit
        value: "1"  # GPU limit
      - name: cpuRequest
        value: "2"  # CPU request
      - name: memoryRequest
        value: "4Gi"  # Memory request
      - name: storageRequest
        value: "10Gi"  # Storage request
      - name: gpuRequest
        value: "1"  # GPU request
  templates:
  - name: main
    steps:
      - - name: clone-repo
          template: clone-repo
          arguments:
            parameters:
              - name: repoUrl
                value: "{{workflow.parameters.repoUrl}}"
              - name: repoBranch
                value: "{{workflow.parameters.repoBranch}}"

      - - name: kustomize-build
          template: kustomize-build
          arguments:
            parameters:
              - name: nodeSelector
                value: "{{workflow.parameters.nodeSelector}}"
              - name: deploymentInformation
                value: "{{workflow.parameters.deploymentInformation}}"
              - name: cpuLimit
                value: "{{workflow.parameters.cpuLimit}}"
              - name: memoryLimit
                value: "{{workflow.parameters.memoryLimit}}"
              - name: storageLimit
                value: "{{workflow.parameters.storageLimit}}"
              - name: gpuLimit
                value: "{{workflow.parameters.gpuLimit}}"
              - name: cpuRequest
                value: "{{workflow.parameters.cpuRequest}}"
              - name: memoryRequest
                value: "{{workflow.parameters.memoryRequest}}"
              - name: storageRequest
                value: "{{workflow.parameters.storageRequest}}"
              - name: gpuRequest
                value: "{{workflow.parameters.gpuRequest}}"
            artifacts:
              - name: repo
                from: "{{steps.clone-repo.outputs.artifacts.repo}}"

      - - name: apply-kubectl
          template: apply-kubectl
          arguments:
            artifacts:
              - name: manifests
                from: "{{steps.kustomize-build.outputs.artifacts.manifests}}"

  - name: clone-repo
    inputs:
      parameters:
        - name: repoUrl
        - name: repoBranch
    container:
      image: alpine/git
      command: [sh, -c]
      args: [
        "git clone --branch {{inputs.parameters.repoBranch}} {{inputs.parameters.repoUrl}} /workspace && \
        ls /workspace"
      ]
    #   volumeMounts:
    #     - name: ssh-key
    #       mountPath: /secret
    #       readOnly: true
    # volumes:
    #   - name: ssh-key
    #     secret:
    #       secretName: git-ssh-key
    outputs:
      artifacts:
        - name: repo
          path: /workspace

  - name: kustomize-build
    inputs:
      parameters:
        - name: nodeSelector
        - name: deploymentInformation
        - name: cpuLimit
        - name: memoryLimit
        - name: storageLimit
        - name: gpuLimit
        - name: cpuRequest
        - name: memoryRequest
        - name: storageRequest
        - name: gpuRequest
      artifacts:
        - name: repo
          path: /workspace
    script:
      image: line/kubectl-kustomize
      command: [sh]
      source: |
        #!/bin/sh
        cd /workspace/overlays/cosmos-predict1-7b-2
        
        # Replace placeholders in deployment-patch.yaml with actual values
        sed -i "s/\NODE_SELECTOR/{{inputs.parameters.nodeSelector}}/g" deployment-patch.yaml
        sed -i "s/\DEPLOYMENT_INFORMATION/{{inputs.parameters.deploymentInformation}}/g" deployment-patch.yaml
        sed -i "s/\DEPLOYMENT_INFORMATION/{{inputs.parameters.deploymentInformation}}/g" service-patch.yaml
        sed -i "s/\DEPLOYMENT_INFORMATION/{{inputs.parameters.deploymentInformation}}/g" kustomization.yaml 
        sed -i "s/\GPU_LIMIT/nvidia.com\/gpu:{{inputs.parameters.gpuLimit}}/g" deployment-patch.yaml
        sed -i "s/\CPU_LIMIT/{{inputs.parameters.cpuLimit}}/g" deployment-patch.yaml
        sed -i "s/\MEMORY_LIMIT/{{inputs.parameters.memoryLimit}}/g" deployment-patch.yaml
        sed -i "s/\STORAGE_LIMIT/{{inputs.parameters.storageLimit}}/g" deployment-patch.yaml
        sed -i "s/\GPU_REQUEST/nvidia.com\/gpu:{{inputs.parameters.gpuRequest}}/g" deployment-patch.yaml
        sed -i "s/\CPU_REQUEST/{{inputs.parameters.cpuRequest}}/g" deployment-patch.yaml
        sed -i "s/\MEMORY_REQUEST/{{inputs.parameters.memoryRequest}}/g" deployment-patch.yaml
        sed -i "s/\STORAGE_REQUEST/{{inputs.parameters.storageRequest}}/g" deployment-patch.yaml
        
        # Generate the manifests using kustomize
        kustomize build . -o /workspace/modified

        ls /workspace/modified
    outputs:
      artifacts:
        - name: manifests
          path: /workspace/modified

  - name: apply-kubectl
    inputs:
      artifacts:
        - name: manifests
          path: /workspace/modified
    container:
      image: bitnami/kubectl:1.21 
      command: [sh, -c]
      args: ["kubectl apply -f /workspace/modified"]
